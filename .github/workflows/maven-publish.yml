# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    tags:
    - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set RELEASE_VERSION
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: BuildTools cache
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ secrets.CACHE_VERSION }}-${{ hashFiles('./.github/workflows/buildtools.sh') }}
        restore-keys: |
          ${{ runner.os }}-maven-${{ secrets.CACHE_VERSION }}-
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: BuildTools Java 17
      run: |
        sh ./.github/workflows/buildtools.sh java-17
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file

    - name: Build with Maven
      run: |
        mvn -B package --file pom.xml --batch-mode -Drevision=$RELEASE_VERSION
        mv commandmanager-bukkit/target/commandmanager-*.jar ./
        mv commandmanager-bungee/target/commandmanager-*.jar ./

    - uses: s4u/maven-settings-action@v2.5.0
      with:
        servers: '[{"id": "github","configuration": {"httpHeaders": {"property": {"name": "Authorization","value": "Bearer ${{ secrets.GITHUB_TOKEN }}"}}}}]'

    - name: Publish to GitHub Packages Apache Maven
      run: mvn --batch-mode deploy "-Drevision=$RELEASE_VERSION"
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - uses: ncipollo/release-action@v1
      with:
        artifacts: "commandmanager-*.jar"
        name: Release ${{ env.RELEASE_VERSION }}
        token: ${{ secrets.GITHUB_TOKEN }}